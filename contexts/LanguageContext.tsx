"use client"

import React, { createContext, useContext, useState, useEffect } from "react"

type Language = "en" | "hi" | "te" | "ta" | "kn" | "mr"

interface Translations {
  [key: string]: string
}

interface LanguageContextType {
  language: Language
  setLanguage: (lang: Language) => void
  t: (key: string) => string
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined)

const translations: Record<Language, Translations> = {
  en: {
    "app.name": "AgriScan",
    "app.tagline": "AI-powered crop disease detection at your fingertips",
    "home.welcome": "ЁЯМ▒ Welcome to AgriScan!",
    "home.scan": "Scan My Crop",
    "home.upload": "Upload Image",
    "home.database": "Browse Database",
    "home.login": "Login / Signup",
    "home.scans": "Scans Completed",
    "home.accuracy": "AI Accuracy",
    "home.users": "Active Users",
    "home.quickActions": "Quick Actions",
    "home.quickActionsDesc": "Start analyzing your crops in seconds",
    "home.liveActivity": "Live Activity Feed",
    "home.recentScans": "Recent scans from farmers worldwide",
    "home.features": "Key Features",
    "home.50diseases": "Crop Diseases",
    "home.20crops": "Across 20+ crop types",
    "home.3seconds": "Analysis Time",
    "home.realtime": "Real-time processing",
    "home.multilingual": "Languages Supported",
    "home.globalreach": "Global reach",
    "toast.cameraReady": "ЁЯОе Camera Ready!",
    "toast.cameraDesc": "Opening camera for real-time scan...",
    "toast.uploadReady": "ЁЯУд Upload Ready!",
    "toast.uploadDesc": "Select images for batch processing...",
    "badge.live": "LIVE",
    "badge.batch": "Batch",
  },
  hi: {
    "app.name": "рдПрдЧреНрд░реАрд╕реНрдХреИрди",
    "app.tagline": "рдЖрдкрдХреА рдЙрдВрдЧрд▓рд┐рдпреЛрдВ рдкрд░ AI-рд╕рдВрдЪрд╛рд▓рд┐рдд рдлрд╕рд▓ рд░реЛрдЧ рдХрд╛ рдкрддрд╛ рд▓рдЧрд╛рдирд╛",
    "home.welcome": "ЁЯМ▒ рдПрдЧреНрд░реАрд╕реНрдХреИрди рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ!",
    "home.scan": "рдореЗрд░реА рдлрд╕рд▓ рд╕реНрдХреИрди рдХрд░реЗрдВ",
    "home.upload": "рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ",
    "home.database": "рдбреЗрдЯрд╛рдмреЗрд╕ рдмреНрд░рд╛рдЙрдЬрд╝ рдХрд░реЗрдВ",
    "home.login": "рд▓реЙрдЧрд┐рди / рд╕рд╛рдЗрдирдЕрдк",
    "home.scans": "рд╕реНрдХреИрди рдкреВрд░реНрдг",
    "home.accuracy": "AI рд╕рдЯреАрдХрддрд╛",
    "home.users": "рд╕рдХреНрд░рд┐рдп рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛",
    "home.quickActions": "рддреНрд╡рд░рд┐рдд рдХреНрд░рд┐рдпрд╛рдПрдВ",
    "home.quickActionsDesc": "рд╕реЗрдХрдВрдб рдореЗрдВ рдЕрдкрдиреА рдлрд╕рд▓реЛрдВ рдХрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рд╢реБрд░реВ рдХрд░реЗрдВ",
    "home.liveActivity": "рд▓рд╛рдЗрд╡ рдЧрддрд┐рд╡рд┐рдзрд┐ рдлрд╝реАрдб",
    "home.recentScans": "рджреБрдирд┐рдпрд╛ рднрд░ рдХреЗ рдХрд┐рд╕рд╛рдиреЛрдВ рд╕реЗ рд╣рд╛рд▓ рдХреЗ рд╕реНрдХреИрди",
    "home.features": "рдореБрдЦреНрдп рд╡рд┐рд╢реЗрд╖рддрд╛рдПрдВ",
    "home.50diseases": "рдлрд╕рд▓ рд░реЛрдЧ",
    "home.20crops": "20+ рдлрд╕рд▓ рдкреНрд░рдХрд╛рд░реЛрдВ рдореЗрдВ",
    "home.3seconds": "рд╡рд┐рд╢реНрд▓реЗрд╖рдг рд╕рдордп",
    "home.realtime": "рд░рд┐рдпрд▓-рдЯрд╛рдЗрдо рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг",
    "home.multilingual": "рднрд╛рд╖рд╛рдПрдБ рд╕рдорд░реНрдерд┐рдд",
    "home.globalreach": "рд╡реИрд╢реНрд╡рд┐рдХ рдкрд╣реБрдВрдЪ",
    "toast.cameraReady": "ЁЯОе рдХреИрдорд░рд╛ рддреИрдпрд╛рд░!",
    "toast.cameraDesc": "рд░реАрдпрд▓-рдЯрд╛рдЗрдо рд╕реНрдХреИрди рдХреЗ рд▓рд┐рдП рдХреИрдорд░рд╛ рдЦреЛрд▓ рд░рд╣рд╛ рд╣реИ...",
    "toast.uploadReady": "ЁЯУд рдЕрдкрд▓реЛрдб рддреИрдпрд╛рд░!",
    "toast.uploadDesc": "рдмреИрдЪ рдкреНрд░реЛрд╕реЗрд╕рд┐рдВрдЧ рдХреЗ рд▓рд┐рдП рдЫрд╡рд┐рдпрд╛рдВ рдЪреБрдиреЗрдВ...",
    "badge.live": "рд▓рд╛рдЗрд╡",
    "badge.batch": "рдмреИрдЪ",
  },
  te: {
    "app.name": "р░Ер░Чр▒Нр░░р░┐р░╕р▒Нр░Хр░╛р░ир▒Н",
    "app.tagline": "р░ор▒А р░Ър▒Зр░др▒Бр░▓р▒Нр░▓р▒Л AI-р░Жр░зр░╛р░░р░┐р░д р░кр░Вр░Я р░╡р▒Нр░пр░╛р░зр░┐ р░Чр▒Бр░░р▒Нр░др░┐р░Вр░кр▒Б",
    "home.welcome": "ЁЯМ▒ р░Ер░Чр▒Нр░░р░┐р░╕р▒Нр░Хр░╛р░ир▒НтАМр░Хр▒Б р░╕р▒Нр░╡р░╛р░Чр░др░В!",
    "home.scan": "р░ир░╛ р░кр░Вр░Яр░ир▒Б р░╕р▒Нр░Хр░╛р░ир▒Н р░Ър▒Зр░пр░Вр░бр░┐",
    "home.upload": "р░Ър░┐р░др▒Нр░░р░╛р░ир▒Нр░ир░┐ р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
    "home.database": "р░бр▒Зр░Яр░╛р░мр▒Зр░╕р▒Н р░мр▒Нр░░р▒Мр░Ьр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
    "home.login": "р░▓р░╛р░Чр░┐р░ир▒Н / р░╕р▒Ир░ир▒Нр░Ер░кр▒Н",
    "home.scans": "р░╕р▒Нр░Хр░╛р░ир▒НтАМр░▓р▒Б р░кр▒Вр░░р▒Нр░др░пр▒Нр░пр░╛р░пр░┐",
    "home.accuracy": "AI р░Цр░Ър▒Нр░Ър░┐р░др░др▒Нр░╡р░В",
    "home.users": "р░Хр▒Нр░░р░┐р░пр░╛р░╢р▒Ар░▓ р░╡р░┐р░ир░┐р░пр▒Лр░Чр░жр░╛р░░р▒Бр░▓р▒Б",
    "home.quickActions": "р░др▒Нр░╡р░░р░┐р░д р░Ър░░р▒Нр░пр░▓р▒Б",
    "home.quickActionsDesc": "р░╕р▒Жр░Хр░ир▒Нр░▓р░▓р▒Л р░ор▒А р░кр░Вр░Яр░▓ р░╡р░┐р░╢р▒Нр░▓р▒Зр░╖р░г р░кр▒Нр░░р░╛р░░р░Вр░нр░┐р░Вр░Ър░Вр░бр░┐",
    "home.liveActivity": "р░▓р▒Ир░╡р▒Н р░пр░╛р░Хр▒Нр░Яр░┐р░╡р░┐р░Яр▒А р░лр▒Ар░бр▒Н",
    "home.recentScans": "р░кр▒Нр░░р░кр░Вр░Ър░╡р▒Нр░пр░╛р░кр▒Нр░др░Вр░Чр░╛ р░░р▒Ир░др▒Бр░▓ р░ир▒Бр░Вр░бр░┐ р░Зр░Яр▒Ар░╡р░▓р░┐ р░╕р▒Нр░Хр░╛р░ир▒НтАМр░▓р▒Б",
    "home.features": "р░ор▒Бр░Цр▒Нр░п р░▓р░Хр▒Нр░╖р░гр░╛р░▓р▒Б",
    "home.50diseases": "р░кр░Вр░Я р░╡р▒Нр░пр░╛р░зр▒Бр░▓р▒Б",
    "home.20crops": "20+ р░кр░Вр░Я р░░р░Хр░╛р░▓р░▓р▒Л",
    "home.3seconds": "р░╡р░┐р░╢р▒Нр░▓р▒Зр░╖р░г р░╕р░ор░пр░В",
    "home.realtime": "р░░р░┐р░пр░▓р▒Н-р░Яр▒Ир░ор▒Н р░кр▒Нр░░р░╛р░╕р▒Жр░╕р░┐р░Вр░Чр▒Н",
    "home.multilingual": "р░нр░╛р░╖р░▓р▒Б р░ор░жр▒Нр░жр░др▒Б",
    "home.globalreach": "р░кр▒Нр░░р░кр░Вр░Ъ р░кр░░р░┐р░зр░┐",
    "toast.cameraReady": "ЁЯОе р░Хр▒Жр░ор▒Жр░░р░╛ р░╕р░┐р░жр▒Нр░зр░В!",
    "toast.cameraDesc": "р░░р░┐р░пр░▓р▒Н-р░Яр▒Ир░ор▒Н р░╕р▒Нр░Хр░╛р░ир▒Н р░Хр▒Лр░╕р░В р░Хр▒Жр░ор▒Жр░░р░╛ р░др▒Жр░░р▒Бр░╕р▒Нр░др▒Лр░Вр░жр░┐...",
    "toast.uploadReady": "ЁЯУд р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░╕р░┐р░жр▒Нр░зр░В!",
    "toast.uploadDesc": "р░мр▒Нр░пр░╛р░Ър▒Н р░кр▒Нр░░р░╛р░╕р▒Жр░╕р░┐р░Вр░Чр▒Н р░Хр▒Лр░╕р░В р░Ър░┐р░др▒Нр░░р░╛р░▓р░ир▒Б р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐...",
    "badge.live": "р░▓р▒Ир░╡р▒Н",
    "badge.batch": "р░мр▒Нр░пр░╛р░Ър▒Н",
  },
  ta: {
    "app.name": "роЕроХрпНро░ро┐ро╕рпНроХрпЗройрпН",
    "app.tagline": "роЙроЩрпНроХро│рпН ро╡ро┐ро░ро▓рпНроХро│ро┐ро▓рпН AI-роЗропроЩрпНроХрпБроорпН рокропро┐ро░рпН роирпЛропрпН роХрогрпНроЯро▒ро┐родро▓рпН",
    "home.welcome": "ЁЯМ▒ роЕроХрпНро░ро┐ро╕рпНроХрпЗройрпБроХрпНроХрпБ ро╡ро░ро╡рпЗро▒рпНроХро┐ро▒рпЛроорпН!",
    "home.scan": "роОройродрпБ рокропро┐ро░рпИ ро╕рпНроХрпЗройрпН роЪрпЖропрпНропро╡рпБроорпН",
    "home.upload": "рокроЯродрпНродрпИрокрпН рокродро┐ро╡рпЗро▒рпНро▒ро╡рпБроорпН",
    "home.database": "родро░ро╡рпБродрпНродро│родрпНродрпИ роЙро▓ро╛ро╡ро╡рпБроорпН",
    "home.login": "роЙро│рпНроирпБро┤рпИро╡рпБ / рокродро┐ро╡рпБ роЪрпЖропрпНропро╡рпБроорпН",
    "home.scans": "ро╕рпНроХрпЗройрпНроХро│рпН роорпБроЯро┐роирпНродродрпБ",
    "home.accuracy": "AI родрпБро▓рпНро▓ро┐ропроорпН",
    "home.users": "роЪрпЖропро▓ро┐ро▓рпН роЙро│рпНро│ рокропройро░рпНроХро│рпН",
    "home.quickActions": "ро╡ро┐ро░рпИро╡рпБ роЪрпЖропро▓рпНроХро│рпН",
    "home.quickActionsDesc": "ро╡ро┐роиро╛роЯро┐роХро│ро┐ро▓рпН роЙроЩрпНроХро│рпН рокропро┐ро░рпНроХро│рпИ рокроХрпБрокрпНрокро╛ропрпНро╡рпБ роЪрпЖропрпНропродрпН родрпКроЯроЩрпНроХрпБроЩрпНроХро│рпН",
    "home.liveActivity": "роирпЗро░роЯро┐ роЪрпЖропро▓рпНрокро╛роЯрпНроЯрпБ роКроЯрпНроЯроорпН",
    "home.recentScans": "роЙро▓роХроорпН роорпБро┤рпБро╡родрпБроорпН роЙро│рпНро│ ро╡ро┐ро╡роЪро╛ропро┐роХро│ро┐роЯрооро┐ро░рпБроирпНродрпБ роЪроорпАрокродрпНродро┐роп ро╕рпНроХрпЗройрпНроХро│рпН",
    "home.features": "роорпБроХрпНроХро┐роп роЕроорпНроЪроЩрпНроХро│рпН",
    "home.50diseases": "рокропро┐ро░рпН роирпЛропрпНроХро│рпН",
    "home.20crops": "20+ рокропро┐ро░рпН ро╡роХрпИроХро│ро┐ро▓рпН",
    "home.3seconds": "рокроХрпБрокрпНрокро╛ропрпНро╡рпБ роирпЗро░роорпН",
    "home.realtime": "роирпЗро░роЯро┐ роЪрпЖропро▓ро╛роХрпНроХроорпН",
    "home.multilingual": "роЖродро░ро┐роХрпНроХрокрпНрокроЯрпБроорпН роорпКро┤ро┐роХро│рпН",
    "home.globalreach": "роЙро▓роХро│ро╛ро╡ро┐роп роЕрогрпБроХро▓рпН",
    "toast.cameraReady": "ЁЯОе роХрпЗрооро░ро╛ родропро╛ро░рпН!",
    "toast.cameraDesc": "роирпЗро░роЯро┐ ро╕рпНроХрпЗройрпБроХрпНроХрпБ роХрпЗрооро░ро╛ро╡рпИродрпН родро┐ро▒роХрпНроХро┐ро▒родрпБ...",
    "toast.uploadReady": "ЁЯУд рокродро┐ро╡рпЗро▒рпНро▒роорпН родропро╛ро░рпН!",
    "toast.uploadDesc": "родрпКроХрпБродро┐ роЪрпЖропро▓ро╛роХрпНроХродрпНродро┐ро▒рпНроХрпБ рокроЯроЩрпНроХро│рпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН...",
    "badge.live": "роирпЗро░роЯро┐",
    "badge.batch": "родрпКроХрпБродро┐",
  },
  kn: {
    "app.name": "р▓Ер▓Чр│Нр▓░р▓┐р▓╕р│Нр▓Хр│Нр▓пр▓╛р▓ир│Н",
    "app.tagline": "р▓ир▓┐р▓ор│Нр▓о р▓мр│Жр▓░р▓│ р▓др│Бр▓жр▓┐р▓пр▓▓р│Нр▓▓р▓┐ AI-р▓Ър▓╛р▓▓р▓┐р▓д р▓мр│Жр▓│р│Ж р▓░р│Лр▓Ч р▓кр▓др│Нр▓др│Ж",
    "home.welcome": "ЁЯМ▒ р▓Ер▓Чр│Нр▓░р▓┐р▓╕р│Нр▓Хр│Нр▓пр▓╛р▓ир│НтАМр▓Чр│Ж р▓╕р│Нр▓╡р▓╛р▓Чр▓д!",
    "home.scan": "р▓ир▓ир│Нр▓и р▓мр│Жр▓│р│Жр▓пр▓ир│Нр▓ир│Б р▓╕р│Нр▓Хр│Нр▓пр▓╛р▓ир│Н р▓ор▓╛р▓бр▓┐",
    "home.upload": "р▓Ър▓┐р▓др│Нр▓░р▓╡р▓ир│Нр▓ир│Б р▓Ер▓кр│НтАМр▓▓р│Лр▓бр│Н р▓ор▓╛р▓бр▓┐",
    "home.database": "р▓бр│Зр▓Яр▓╛р▓мр│Зр▓╕р│Н р▓мр│Нр▓░р│Мр▓╕р│Н р▓ор▓╛р▓бр▓┐",
    "home.login": "р▓▓р▓╛р▓Чр▓┐р▓ир│Н / р▓╕р│Ир▓ир│Нр▓Ер▓кр│Н",
    "home.scans": "р▓╕р│Нр▓Хр│Нр▓пр▓╛р▓ир│НтАМр▓Чр▓│р│Б р▓кр│Вр▓░р│Нр▓гр▓Чр│Кр▓Вр▓бр▓┐р▓╡р│Ж",
    "home.accuracy": "AI р▓ир▓┐р▓Цр▓░р▓др│Ж",
    "home.users": "р▓╕р▓Хр│Нр▓░р▓┐р▓п р▓мр▓│р▓Хр│Жр▓жр▓╛р▓░р▓░р│Б",
    "home.quickActions": "р▓др│Нр▓╡р▓░р▓┐р▓д р▓Хр│Нр▓░р▓ор▓Чр▓│р│Б",
    "home.quickActionsDesc": "р▓╕р│Жр▓Хр│Жр▓Вр▓бр│Бр▓Чр▓│р▓▓р│Нр▓▓р▓┐ р▓ир▓┐р▓ор│Нр▓о р▓мр│Жр▓│р│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓╡р▓┐р▓╢р│Нр▓▓р│Зр▓╖р▓┐р▓╕р▓▓р│Б р▓кр│Нр▓░р▓╛р▓░р▓Вр▓нр▓┐р▓╕р▓┐",
    "home.liveActivity": "р▓▓р│Ир▓╡р│Н р▓Ър▓Яр│Бр▓╡р▓Яр▓┐р▓Хр│Ж р▓лр│Ар▓бр│Н",
    "home.recentScans": "р▓╡р▓┐р▓╢р│Нр▓╡р▓жр▓╛р▓жр│Нр▓пр▓Вр▓д р▓░р│Ир▓др▓░р▓┐р▓Вр▓ж р▓Зр▓др│Нр▓др│Ар▓Ър▓┐р▓и р▓╕р│Нр▓Хр│Нр▓пр▓╛р▓ир│НтАМр▓Чр▓│р│Б",
    "home.features": "р▓кр│Нр▓░р▓ор│Бр▓Ц р▓╡р│Ир▓╢р▓┐р▓╖р│Нр▓Яр│Нр▓пр▓Чр▓│р│Б",
    "home.50diseases": "р▓мр│Жр▓│р│Ж р▓░р│Лр▓Чр▓Чр▓│р│Б",
    "home.20crops": "20+ р▓мр│Жр▓│р│Ж р▓кр│Нр▓░р▓Хр▓╛р▓░р▓Чр▓│р▓▓р│Нр▓▓р▓┐",
    "home.3seconds": "р▓╡р▓┐р▓╢р│Нр▓▓р│Зр▓╖р▓гр│Ж р▓╕р▓ор▓п",
    "home.realtime": "р▓ир│Ир▓Ь-р▓╕р▓ор▓п р▓кр│Нр▓░р▓Хр│Нр▓░р▓┐р▓пр│Ж",
    "home.multilingual": "р▓нр▓╛р▓╖р│Жр▓Чр▓│р│Б р▓мр│Жр▓Вр▓мр▓▓р▓┐р▓д",
    "home.globalreach": "р▓Ьр▓╛р▓Чр▓др▓┐р▓Х р▓╡р│Нр▓пр▓╛р▓кр│Нр▓др▓┐",
    "toast.cameraReady": "ЁЯОе р▓Хр│Нр▓пр▓╛р▓ор▓░р▓╛ р▓╕р▓┐р▓жр│Нр▓з!",
    "toast.cameraDesc": "р▓ир│Ир▓Ь-р▓╕р▓ор▓п р▓╕р│Нр▓Хр│Нр▓пр▓╛р▓ир│НтАМр▓Чр▓╛р▓Чр▓┐ р▓Хр│Нр▓пр▓╛р▓ор│Жр▓░р▓╛ р▓др│Жр▓░р│Жр▓пр│Бр▓др│Нр▓др▓┐р▓жр│Ж...",
    "toast.uploadReady": "ЁЯУд р▓Ер▓кр│НтАМр▓▓р│Лр▓бр│Н р▓╕р▓┐р▓жр│Нр▓з!",
    "toast.uploadDesc": "р▓мр│Нр▓пр▓╛р▓Ър│Н р▓кр│Нр▓░р▓Хр│Нр▓░р▓┐р▓пр│Жр▓Чр▓╛р▓Чр▓┐ р▓Ър▓┐р▓др│Нр▓░р▓Чр▓│р▓ир│Нр▓ир│Б р▓Жр▓пр│Нр▓Хр│Ж р▓ор▓╛р▓бр▓┐...",
    "badge.live": "р▓▓р│Ир▓╡р│Н",
    "badge.batch": "р▓мр│Нр▓пр▓╛р▓Ър│Н",
  },
  mr: {
    "app.name": "рдЕреЕрдЧреНрд░реАрд╕реНрдХреЕрди",
    "app.tagline": "рддреБрдордЪреНрдпрд╛ рдмреЛрдЯрд╛рдВрдЪреНрдпрд╛ рдЯреЛрдХрд╛рд╡рд░ AI-рдЪрд╛рд▓рд┐рдд рдкреАрдХ рд░реЛрдЧ рд╢реЛрдз",
    "home.welcome": "ЁЯМ▒ рдЕреЕрдЧреНрд░реАрд╕реНрдХреЕрдирдордзреНрдпреЗ рдЖрдкрд▓реЗ рд╕реНрд╡рд╛рдЧрдд рдЖрд╣реЗ!",
    "home.scan": "рдорд╛рдЭреА рдкрд┐рдХреЗ рд╕реНрдХреЕрди рдХрд░рд╛",
    "home.upload": "рдкреНрд░рддрд┐рдорд╛ рдЕрдкрд▓реЛрдб рдХрд░рд╛",
    "home.database": "рдбреЗрдЯрд╛рдмреЗрд╕ рдмреНрд░рд╛рдЙрдЭ рдХрд░рд╛",
    "home.login": "рд▓реЙрдЧрд┐рди / рд╕рд╛рдЗрдирдЕрдк",
    "home.scans": "рд╕реНрдХреЕрди рдкреВрд░реНрдг",
    "home.accuracy": "AI рдЕрдЪреВрдХрддрд╛",
    "home.users": "рд╕рдХреНрд░рд┐рдп рд╡рд╛рдкрд░рдХрд░реНрддреЗ",
    "home.quickActions": "рддреНрд╡рд░рд┐рдд рдХреНрд░рд┐рдпрд╛",
    "home.quickActionsDesc": "рд╕реЗрдХрдВрджрд╛рдд рддреБрдордЪреНрдпрд╛ рдкрд┐рдХрд╛рдВрдЪреЗ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рд╕реБрд░реВ рдХрд░рд╛",
    "home.liveActivity": "рд▓рд╛рдЗрд╡реНрд╣ рдЕреЕрдХреНрдЯрд┐рд╡реНрд╣рд┐рдЯреА рдлреАрдб",
    "home.recentScans": "рдЬрдЧрднрд░рд╛рддреАрд▓ рд╢реЗрддрдХрд▒реНрдпрд╛рдВрдХрдбреВрди рдЕрд▓реАрдХрдбреАрд▓ рд╕реНрдХреЕрди",
    "home.features": "рдореБрдЦреНрдп рд╡реИрд╢рд┐рд╖реНрдЯреНрдпреЗ",
    "home.50diseases": "рдкреАрдХ рд░реЛрдЧ",
    "home.20crops": "20+ рдкреАрдХ рдкреНрд░рдХрд╛рд░рд╛рдВрдордзреНрдпреЗ",
    "home.3seconds": "рд╡рд┐рд╢реНрд▓реЗрд╖рдг рд╡реЗрд│",
    "home.realtime": "рд░рд┐рдЕрд▓-рдЯрд╛рдЗрдо рдкреНрд░рдХреНрд░рд┐рдпрд╛",
    "home.multilingual": "рднрд╛рд╖рд╛ рд╕рдорд░реНрдерд┐рдд",
    "home.globalreach": "рдЬрд╛рдЧрддрд┐рдХ рдкреЛрд╣реЛрдЪ",
    "toast.cameraReady": "ЁЯОе рдХреЕрдореЗрд░рд╛ рддрдпрд╛рд░!",
    "toast.cameraDesc": "рд░рд┐рдЕрд▓-рдЯрд╛рдЗрдо рд╕реНрдХреЕрдирд╕рд╛рдареА рдХреЕрдореЗрд░рд╛ рдЙрдШрдбрдд рдЖрд╣реЗ...",
    "toast.uploadReady": "ЁЯУд рдЕрдкрд▓реЛрдб рддрдпрд╛рд░!",
    "toast.uploadDesc": "рдмреЕрдЪ рдкреНрд░рдХреНрд░рд┐рдпреЗрд╕рд╛рдареА рдкреНрд░рддрд┐рдорд╛ рдирд┐рд╡рдбрд╛...",
    "badge.live": "рд▓рд╛рдЗрд╡реНрд╣",
    "badge.batch": "рдмреЕрдЪ",
  },
}

export function LanguageProvider({ children }: { children: React.ReactNode }) {
  const [language, setLanguageState] = useState<Language>("en")

  useEffect(() => {
    const savedLang = localStorage.getItem("language") as Language
    if (savedLang) {
      setLanguageState(savedLang)
    }
  }, [])

  const setLanguage = (lang: Language) => {
    setLanguageState(lang)
    localStorage.setItem("language", lang)
  }

  const t = (key: string): string => {
    return translations[language]?.[key] || translations.en[key] || key
  }

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  )
}

export function useLanguage() {
  const context = useContext(LanguageContext)
  if (!context) {
    throw new Error("useLanguage must be used within LanguageProvider")
  }
  return context
}
